server:
  port: ${rookie-im.auth.server.port}
  servlet:
    context-path: /v1/api
spring:
  profiles:
    #运行的环境
    active: test
  application:
    name: rookie-im-api-auth
  datasource:
    url: jdbc:mysql://${rookie-im.mysql.ip}:${rookie-im.mysql.port}/${rookie-im.mysql.db}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
    username: ${rookie-im.mysql.username}
    password: ${rookie-im.mysql.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      database: 3 # Redis 数据库索引（默认为 0）
      host: ${rookie-im.auth.redis.ip} # Redis 服务器地址
      port: ${rookie-im.auth.redis.port} # Redis 服务器连接端口
      password: ${rookie-im.auth.redis.password} # Redis 服务器连接密码（默认为空）
      timeout: 5s # 读超时时间
      connect-timeout: 5s # 链接超时时间
      lettuce:
        pool:
          max-active: 200 # 连接池最大连接数
          max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
          min-idle: 0 # 连接池中的最小空闲连接
          max-idle: 10 # 连接池中的最大空闲连接
# Sa-Token 配置 (文档: https://sa-token.cc)
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true

# logger 配置
logging:
  config: classpath:logback-spring.xml